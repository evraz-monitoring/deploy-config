version: "3.7"

services:
  db:
    image: {{ db_image }}:{{ db_version }}
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - ${DB_PORT:-5432}:5432

  redis:
    image: {{ redis_image }}:{{ redis_version }}
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  realtime-backend:
    image: {{ realtime_backend_image }}:{{ realtime_backend_version }}
    environment:
      REDIS_HOST: redis
      WS_HOST: {{ host }}
      WS_PROTOCOL: "wss"
      CHECK_DELAY: "0.01"
    ports:
      - "8002:8000"

  historical-backend:
    image: {{ data_loader_backend_image }}:{{ data_loader_backend_version }}
    environment:
      DB_HOST: db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SECRET_KEY: {{ django_secret_key }}
      CSRF_TRUSTED_ORIGINS: "http://localhost http://127.0.0.1 http://0.0.0.0 http://localhost:3000 http://127.0.0.1:3000 http://evraz.rubles.lol https://evraz.rubles.lol"
      ALLOWED_HOSTS: "localhost 127.0.0.1 localhost:3000 127.0.0.1:3000 evraz.rubles.lol evraz.rubles.lol"
      DEBUG: "{{ django_debug }}"
    ports:
      - "8000:8000"

  kafka-consumer:
    image: {{ kafka_consumer_image }}:{{ kafka_consumer_version }}
    command: python manage.py start_data_load
    environment:
      DB_HOST: db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_CONSUMER_GROUP: BASED
      SECRET_KEY: {{ django_secret_key }}
      CSRF_TRUSTED_ORIGINS: "http://localhost http://127.0.0.1 http://0.0.0.0 http://localhost:3000 http://127.0.0.1:3000 http://evraz.rubles.lol https://evraz.rubles.lol"
      ALLOWED_HOSTS: "localhost 127.0.0.1 localhost:3000 127.0.0.1:3000 evraz.rubles.lol evraz.rubles.lol"
      DEBUG: "{{ django_debug }}"

  grafana:
    image: grafana/grafana-enterprise:8.2.0
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  frontend:
    image: {{ frontend_image }}:{{ frontend_version }}
    ports:
      - "8003:80"

{% if include_redis_insight %}
  redis-insight:
    image: redislabs/redisinsight:latest
    volumes:
      - redisinsight:/db
    ports:
      - "8001:8001"
{% endif %}

volumes:
  db: {}
  grafana-data: {}
{% if include_redis_insight %}
  redisinsight: {}
{% endif %}
